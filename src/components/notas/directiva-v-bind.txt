DIRECTIVA: v-bind
Permite vincular datos de elementos.
Se usa para vincular una expresion a una propiedad de un elemento, cuando cambia el valor de la expresion vue actualiza en automaico el valor de la propiedad del dom.


<template> 
    <div id="mi-componente">
            <h2 v-if="isVisible">{{ subtitulo }}</h2>  
            <h1 v-bind:class= "{ highlighted: isHighlighted }">{{ title }}</h1>  //Aqui se agrega la directiva, con la clase hightlighted se determina si esta aplicada o no, e igual imprime el texto que se tiene desde el dato en el script.
            <button v-on:click="toggleHighlight">Cambia color</button>          //cuando se hace clic se ejecuta el metodo,
            <button v-on:click="$event => isVisible = !isVisible">Mostrar</button> 
            <button v-on:click="sayHello">Alerta</button> 
            
            <input v-model="subtitulo">

            <ul>
                <li v-for="item in list" :key="item.id"> {{ item.text }}</li>
            </ul>
    </div>    
</template>

--------------------<Se agrega un estilo para el cambio de color del texto>--------------
<style scoped>
.highlighted {
    color: pink;
}
</style>
--------------------------

<script>    //aqui va todo el codigo de Vue
export default {
    name:'MiComponente',        //Nombre de mi componente
    data() {                    //propiedad o metodo 
        return {                //devuelve a la vista lo que quiero mostrar
            subtitulo: 'Sub del componente',     //Puedo crear propieddes, y estas seran mostradas desde  las dobles llaves{{ }} en el h2                                     // la propiedad subtitulo, se actualiza con el v-model
            title: 'Cambio de color',        //elemento
            isHighlighted:false,              //propiedad
            isVisible: true,                    // se puede aplicar a los elementos de las plantillas 
            list: [
                { id: 1, text: 'Primer item' },
                { id: 1, text: 'Segundo item' },
                { id: 1, text: 'Tercer item' }
            ]                     
        }
    },
methods : {
    sayHello() {
        alert('Hello!');
    },
    toggleHighlight() {             //boton 
        this.isHighlighted = !this.isHighlighted;
    }
}
}
</script>